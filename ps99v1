-- Make sure you have Rayfield loaded first
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Create Rayfield Window
local Window = Rayfield:CreateWindow({
    Name = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name,
    Icon = 0,
    LoadingTitle = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name,
    LoadingSubtitle = "by Void Hub",
    Theme = "Default",

    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,

    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = "Big Hub"
    },

    Discord = {
        Enabled = true,
        Invite = "https://discord.gg/36JRDhmT8P",
        RememberJoins = false
    },

    KeySystem = false,
    KeySettings = {
        Title = "Untitled",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"Hello"}
    }
})

local InfoTab = Window:CreateTab("Info")  -- Info Tab
local FarmTab = Window:CreateTab("Farm")  -- Farm Tab

-- Global Configuration Setup
getgenv().config = {
    farm = {
        toggle = false,
        singleTarget = false,
        farmPrint = false,
        radius = 70,
        wait = 0.2
    },
    autoLootbag = false,
    autoOrb = false
}

local lx = "n"
local LocalPlayer = game.Players.LocalPlayer
local HumanoidRootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart", true)

local vim = game:GetService("VirtualInputManager")
local sqrt = math.sqrt
local pow = math.pow

local Things = game.workspace['__THINGS']
local Lootbags = Things.Lootbags
local Orbs = Things.Orbs
local ShinyRelics = Things.ShinyRelics
local Breakables = Things.Breakables
local Pets = Things.Pets
local Network = game:GetService("ReplicatedStorage").Network
local PetInventory = LocalPlayer.PlayerGui.Inventory.Frame.Main.Pets.EquippedPets

getgenv().currentCoins = {}
getgenv().equippedPets = {}
getgenv().totalClaimed = 0
getgenv().totalTime = 0

local function indexPets()
    table.clear(getgenv().equippedPets)
    for _, pet in ipairs(Pets:GetChildren()) do
        if PetInventory:FindFirstChild(pet.Name) then
            table.insert(getgenv().equippedPets, pet.Name)
        end
    end
    return getgenv().equippedPets
end

local function calcDistance(obj1, obj2)
    local pPosX, pPosZ = obj1.CFrame.X, obj1.CFrame.Z
    local hPosX, hPosZ = obj2.CFrame.X, obj2.CFrame.Z

    return sqrt(pow(pPosX - hPosX, 2) + pow(pPosZ - hPosZ, 2))
end

local function getCenter()
    local frame = Instance.new("Frame")
    frame.Parent = game.CoreGui
    frame.Name = LocalPlayer.Name
    frame.AnchorPoint = Vector2.new(0.5, 0.5)
    frame.Position = UDim2.fromScale(0.5, 0.5)
    frame.Size = UDim2.fromOffset(10, 10)
    frame.Visible = false

    return { frame.AbsolutePosition.X, frame.AbsolutePosition.Y }
end

-- Create Rayfield UI toggles

-- Farm Nearest Coins Toggle
local farmToggle = FarmTab:CreateToggle({
    Name = "Farm Nearest Coins",
    CurrentValue = false,
    Flag = "toggleFarm",
    Callback = function(value)
        getgenv().config.farm.toggle = value
        while getgenv().config.farm.toggle and task.wait() do
            for _, v in ipairs(Breakables:GetChildren()) do
                if v.Name ~= "Highlight" and v:FindFirstChild("Hitbox", true) then
                    local part = v:FindFirstChild("Hitbox", true)

                    if calcDistance(part, HumanoidRootPart) <= getgenv().config.farm.radius then
                        if getgenv().config.farm.singleTarget then
                            local tmpName = v.Name
                            local startTime = os.clock()

                            repeat
                                if calcDistance(part, HumanoidRootPart) > getgenv().config.farm.radius then
                                    break
                                end
                                task.wait(getgenv().config.farm.wait)
                                Network.Breakables_PlayerDealDamage:FireServer(v.Name)
                            until not Breakables:FindFirstChild(v.Name)

                            getgenv().totalClaimed = getgenv().totalClaimed + 1
                            getgenv().totalTime = getgenv().totalTime + (os.clock() - startTime)
                            if getgenv().config.farm.farmPrint then
                                print("Farmed "..tmpName.." in: "..tostring(os.clock() - startTime).." Avg: "..tostring(getgenv().totalTime / getgenv().totalClaimed))
                            end
                        else
                            if not table.find(getgenv().currentCoins, v.Name) then
                                table.insert(getgenv().currentCoins, v.Name)
                                task.spawn(function()
                                    local tmpPart = part
                                    local tmpName = v.Name
                                    local startTime = os.clock()
                                    repeat
                                        if calcDistance(tmpPart, HumanoidRootPart) > getgenv().config.farm.radius then
                                            table.remove(getgenv().currentCoins, table.find(getgenv().currentCoins, v.Name))
                                            break
                                        end

                                        task.wait(getgenv().config.farm.wait * math.random(1, 2))

                                        Network.Breakables_PlayerDealDamage:FireServer(tmpName)
                                    until not Breakables:FindFirstChild(tmpName)

                                    table.remove(getgenv().currentCoins, table.find(getgenv().currentCoins, v.Name))
                                    getgenv().totalClaimed = getgenv().totalClaimed + 1
                                    getgenv().totalTime = getgenv().totalTime + (os.clock() - startTime)
                                    if getgenv().config.farm.farmPrint then
                                        print("Farmed "..tmpName.." in: "..tostring(os.clock() - startTime).." Avg: "..tostring(getgenv().totalTime / getgenv().totalClaimed))
                                    end
                                end)
                            end
                        end
                    end
                end
            end
        end
    end
})

-- Auto Lootbag Toggle
local lootbagToggle = FarmTab:CreateToggle({
    Name = "Auto Collect Lootbags",
    CurrentValue = false,
    Flag = "toggleLootbag",
    Callback = function(value)
        getgenv().config.autoLootbag = value
        while getgenv().config.autoLootbag and task.wait(0.1) do
            for _, lootbag in ipairs(Lootbags:GetChildren()) do
                if lootbag:IsA("MeshPart") then
                    lootbag.CFrame = CFrame.new(LocalPlayer.Character.HumanoidRootPart.Position)
                end
            end
        end
    end
})

-- Auto Orb Toggle
local orbToggle = FarmTab:CreateToggle({
    Name = "Auto Collect Orbs",
    CurrentValue = false,
    Flag = "toggleOrbs",
    Callback = function(value)
        getgenv().config.autoOrb = value
        while getgenv().config.autoOrb and task.wait(0.1) do
            for _, orb in ipairs(Orbs:GetChildren()) do
                if orb:IsA("MeshPart") then
                    orb.CFrame = CFrame.new(LocalPlayer.Character.HumanoidRootPart.Position)
                end
            end
        end
    end
})
