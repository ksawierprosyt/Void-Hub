local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name,
    Icon = 0,
    LoadingTitle = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name,
    LoadingSubtitle = "by Void Hub",
    Theme = "Default",

    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,

    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = "Big Hub"
    },

    Discord = {
        Enabled = true,
        Invite = "https://discord.gg/36JRDhmT8P",
        RememberJoins = false
    },

    KeySystem = false,
    KeySettings = {
        Title = "Untitled",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"Hello"}
    }
})

local MainTab = Window:CreateTab("Main")

local autoBuyActive = false  -- Toggle state
local autoGiftBuyActive = false  -- Toggle state
local autoBuyWorkerSpeedActive = false  -- Toggle state
local autoBuyGiftQualityActive = false

local function autoBuyLoop()
    local Plots = workspace.Plots
    local player = game:GetService("Players").LocalPlayer

    if not player then
        warn("LocalPlayer not found!")
        return
    end

    while autoBuyActive do
        local Plot = Plots:FindFirstChild("Plot")
        if Plot and Plot:GetAttribute("Owner") == player.UserId then
            local Buttons = Plot:FindFirstChild("Buttons")
            if Buttons then
                local lowestPriceCylinder = nil
                local lowestPrice = math.huge

                -- Find the lowest price Cylinder
                for _, obj in pairs(Buttons:GetChildren()) do
                    if obj:IsA("MeshPart") and obj.Name == "Cylinder" and obj.Transparency == 0 then
                        local billboardGui = obj:FindFirstChild("BillboardGui")
                        if billboardGui then
                            local priceLabel = billboardGui:FindFirstChild("Price")
                            if priceLabel and priceLabel:IsA("TextLabel") then
                                local price = tonumber(priceLabel.Text:match("%d+"))
                                if price and price < lowestPrice then
                                    lowestPrice = price
                                    lowestPriceCylinder = obj
                                end
                            end
                        end
                    end
                end

                -- If a valid Cylinder is found
                if lowestPriceCylinder then
                    local cash = player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Cash")
                    if cash then
                        while autoBuyActive and cash.Value < lowestPrice do
                            task.wait(1) -- Wait until player has enough cash
                        end

                        -- Teleport and buy the button
                        if autoBuyActive and cash.Value >= lowestPrice then
                            local character = player.Character
                            if character and character:FindFirstChild("HumanoidRootPart") then
                                character.HumanoidRootPart.CFrame = lowestPriceCylinder.CFrame
                                print("Teleported to Cylinder: ", lowestPrice)

                                -- Simulate purchase
                                task.wait(1) -- Give some time for purchase
                            end
                        end
                    end
                end
            end
        end

        task.wait(1) -- Prevent excessive looping
    end
end

local function autoBuyWorkerSpeedLoop()
    local Plots = workspace.Plots
    local player = game:GetService("Players").LocalPlayer

    if not player then
        warn("LocalPlayer not found!")
        return
    end

    while autoBuyWorkerSpeedActive do
        local Plot = Plots:FindFirstChild("Plot")
        if Plot and Plot:GetAttribute("Owner") == player.UserId then
            local upgradePanel = Plot:FindFirstChild("Items") and Plot.Items:FindFirstChild("UpgradePanel")
            if upgradePanel then
                local surfaceGui = upgradePanel:FindFirstChild("SurfaceGui")
                if surfaceGui then
                    local workerSpeedButton = surfaceGui:FindFirstChild("WorkerSpeed") and surfaceGui.WorkerSpeed:FindFirstChild("UpgradeButton")
                    if workerSpeedButton then
                        -- Ensure the button has a "Text" property that contains the price
                        local priceText = workerSpeedButton:FindFirstChild("Text") and workerSpeedButton.Text
                        if priceText then
                            local price = tonumber(priceText:match("(%d+)")) -- Extract number from "X$"
                            if price then
                                local cash = player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Cash")
                                if cash then
                                    -- Wait until the player has enough cash
                                    while autoBuyWorkerSpeedActive and cash.Value < price do
                                        task.wait(1) -- Wait for enough cash
                                    end

                                    -- Fire the RemoteEvent to buy the upgrade
                                    if autoBuyWorkerSpeedActive and cash.Value >= price then
                                        local args = { [1] = "Worker Speed" }
                                        local success, err = pcall(function()
                                            game:GetService("ReplicatedStorage"):WaitForChild("DataFolder"):WaitForChild("Edits"):WaitForChild("RequestUpgrade"):InvokeServer(unpack(args))
                                        end)
                                        if success then
                                            print("Bought Worker Speed upgrade for $" .. price)
                                        else
                                            warn("Error firing RemoteEvent: " .. err)
                                        end

                                        task.wait(1) -- Prevent excessive requests
                                    end
                                end
                            else
                                warn("Unable to extract price from WorkerSpeed button text.")
                            end
                        else
                            warn("WorkerSpeed UpgradeButton text not found.")
                        end
                    else
                        warn("WorkerSpeed UpgradeButton not found.")
                    end
                else
                    warn("SurfaceGui not found.")
                end
            else
                warn("UpgradePanel not found.")
            end
        else
            warn("Player doesn't own this plot.")
        end

        task.wait(1) -- Prevent excessive looping
    end
end

local AutoBuyToggle = MainTab:CreateToggle({
    Name = "Auto Buy Buttons",
    CurrentValue = false,
    Flag = "BuyButtons",
    Callback = function(Value)
        autoBuyActive = Value
        if autoBuyActive then
            autoBuyLoop()
        end
    end,
})

local AutobuyworkerspeedToggle = MainTab:CreateToggle({
    Name = "Auto Buy Worker Speed",
    CurrentValue = false,
    Flag = "buyWorkerSpeed",
    Callback = function(Value)
        autoBuyWorkerSpeedActive = Value
        if autoBuyWorkerSpeedActive then
            autoBuyWorkerSpeedLoop()
        end
    end,
})
