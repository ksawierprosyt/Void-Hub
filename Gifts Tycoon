local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name,
    Icon = 0,
    LoadingTitle = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name,
    LoadingSubtitle = "by Void Hub",
    Theme = "Default",

    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,

    ConfigurationSaving = {
       Enabled = false,
       FolderName = nil,
       FileName = "Big Hub"
    },

    Discord = {
       Enabled = true,
       Invite = "https://discord.gg/36JRDhmT8P",
       RememberJoins = false
    },

    KeySystem = false,
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided",
       FileName = "Key",
       SaveKey = true,
       GrabKeyFromSite = false,
       Key = {"Hello"}
    }
})

local MainTab = Window:CreateTab("Main")

local autoBuyActive = false  -- Toggle state
local autoGiftBuyActive = false  -- Toggle state
local autoBuyWorkerSpeedActive = false  -- Toggle state
local autoBuyGiftQualityActive = false

local function autoBuyLoop()
    local Plots = workspace.Plots
    local player = game:GetService("Players").LocalPlayer

    if not player then
        warn("LocalPlayer not found!")
        return
    end

    while autoBuyActive do
        local Plot = Plots:FindFirstChild("Plot")
        if Plot and Plot:GetAttribute("Owner") == player.UserId then
            local Buttons = Plot:FindFirstChild("Buttons")
            if Buttons then
                local lowestPriceCylinder = nil
                local lowestPrice = math.huge

                -- Find the lowest price Cylinder
                for _, obj in pairs(Buttons:GetChildren()) do
                    if obj:IsA("MeshPart") and obj.Name == "Cylinder" and obj.Transparency == 0 then
                        local billboardGui = obj:FindFirstChild("BillboardGui")
                        if billboardGui then
                            local priceLabel = billboardGui:FindFirstChild("Price")
                            if priceLabel and priceLabel:IsA("TextLabel") then
                                local price = tonumber(priceLabel.Text:match("%d+"))
                                if price and price < lowestPrice then
                                    lowestPrice = price
                                    lowestPriceCylinder = obj
                                end
                            end
                        end
                    end
                end

                -- If a valid Cylinder is found
                if lowestPriceCylinder then
                    local cash = player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Cash")
                    if cash then
                        while autoBuyActive and cash.Value < lowestPrice do
                            task.wait(1) -- Wait until player has enough cash
                        end

                        -- Teleport and buy the button
                        if autoBuyActive and cash.Value >= lowestPrice then
                            local character = player.Character
                            if character and character:FindFirstChild("HumanoidRootPart") then
                                character.HumanoidRootPart.CFrame = lowestPriceCylinder.CFrame
                                print("Teleported to Cylinder: ", lowestPrice)

                                -- Simulate purchase
                                task.wait(1) -- Give some time for purchase
                            end
                        end
                    end
                end
            end
        end

        task.wait(1) -- Prevent excessive looping
    end
end

local function autoGiftBuyLoop()
    local Plots = workspace.Plots
    local player = game:GetService("Players").LocalPlayer

    if not player then
        warn("LocalPlayer not found!")
        return
    end

    while autoGiftBuyActive do
        local Plot = Plots:FindFirstChild("Plot")
        if Plot and Plot:GetAttribute("Owner") == player.UserId then
            local Buttons = Plot:FindFirstChild("Buttons")
            if Buttons then
                local lowestGiftCylinder = nil
                local lowestGiftAmount = math.huge

                -- Find the lowest-priced Gift Cylinder
                for _, obj in pairs(Buttons:GetChildren()) do
                    if obj:IsA("MeshPart") and obj.Name == "Cylinder" and obj.Transparency == 0 then
                        local billboardGui = obj:FindFirstChild("BillboardGui")
                        if billboardGui then
                            local priceLabel = billboardGui:FindFirstChild("Price")
                            if priceLabel and priceLabel:IsA("TextLabel") then
                                local priceText = priceLabel.Text
                                local giftAmount = tonumber(priceText:match("(%d+) Gifts"))  -- Look for "X Gifts"

                                if giftAmount and giftAmount < lowestGiftAmount then
                                    lowestGiftAmount = giftAmount
                                    lowestGiftCylinder = obj
                                end
                            end
                        end
                    end
                end

                -- If a valid Cylinder is found
                if lowestGiftCylinder then
                    local gifts = player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Gifts")
                    if gifts then
                        while autoGiftBuyActive and gifts.Value < lowestGiftAmount do
                            task.wait(1) -- Wait until player has enough Gifts
                        end

                        -- Teleport and buy the button
                        if autoGiftBuyActive and gifts.Value >= lowestGiftAmount then
                            local character = player.Character
                            if character and character:FindFirstChild("HumanoidRootPart") then
                                character.HumanoidRootPart.CFrame = lowestGiftCylinder.CFrame
                                print("Teleported to Cylinder: ", lowestGiftAmount, " Gifts")

                                -- Simulate purchase
                                task.wait(1) -- Give some time for purchase
                            end
                        end
                    end
                end
            end
        end

        task.wait(1) -- Prevent excessive looping
    end
end

local function autoBuyWorkerSpeedLoop()
    local player = game:GetService("Players").LocalPlayer

    if not player then
        warn("LocalPlayer not found!")
        return
    end

    while autoBuyWorkerSpeedActive do
        local args = {
            [1] = "Worker Speed"
        }

        -- Fire the RemoteEvent repeatedly while the toggle is on
        local success, err = pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("DataFolder"):WaitForChild("Edits"):WaitForChild("RequestUpgrade"):InvokeServer(unpack(args))
        end)

        if not success then
            warn("Error firing RemoteEvent: " .. err)
        else
            print("Bought Worker Speed upgrade.")
        end

        task.wait(1) -- Wait before firing again to avoid spamming too fast
    end
end

local function autoBuyQualityGiftsLoop()
    local player = game:GetService("Players").LocalPlayer

    if not player then
        warn("LocalPlayer not found!")
        return
    end

    while autoBuyGiftQualityActive do
        local args = {
            [1] = "Gift Quality"
        }

        -- Fire the RemoteEvent repeatedly while the toggle is on
        local success, err = pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("DataFolder"):WaitForChild("Edits"):WaitForChild("RequestUpgrade"):InvokeServer(unpack(args))
        end)

        if not success then
            warn("Error firing RemoteEvent: " .. err)
        else
            print("Bought Quality Gifts upgrade.")
        end

        task.wait(1) -- Wait before firing again to avoid spamming too fast
    end
end


local AutoBuyToggle = MainTab:CreateToggle({
    Name = "Auto Buy Buttons",
    CurrentValue = false,
    Flag = "BuyButtons",
    Callback = function(Value)
        autoBuyActive = Value
        if autoBuyActive then
            autoBuyLoop()
        end
    end,
})

local AutoGiftBuyToggle = MainTab:CreateToggle({
    Name = "Auto Buy Gifts Buttons",
    CurrentValue = false,
    Flag = "BuyGifts",
    Callback = function(Value)
        autoGiftBuyActive = Value
        if autoGiftBuyActive then
            autoGiftBuyLoop()
        end
    end,
})

local AutobuyworkerspeedToggle = MainTab:CreateToggle({
    Name = "Auto Buy Worker Speed",
    CurrentValue = false,
    Flag = "buyWorkerSpeed",
    Callback = function(Value)
        autoBuyWorkerSpeedActive = Value
        if autoBuyWorkerSpeedActive then
            autoBuyWorkerSpeedLoop()
        end
    end,
})

local AutobuygiftqualityToggle = MainTab:CreateToggle({
    Name = "Auto Buy Gift Quality",
    CurrentValue = false,
    Flag = "buygiftquality",
    Callback = function(Value)
        autoBuyGiftQualityActive = Value
        if autoBuyGiftQualityActive then
            autoBuyQualityGiftsLoop()
        end
    end,
})
